/********* autopopulate forms ************/

$(function () {
    /* this section will replace the value of hidden fields
    with the values in the query string */
    var match,
		pl = /\+/g,  // Regex for replacing addition symbol with a space
		search = /([^&=]+)=?([^&]*)/g, // regex for name value pairs
		decode = function (s) { return decodeURIComponent(s.replace(pl, " ")); }, // decode function
		query = window.location.search.substring(1); // url query

    /* loop for each name value pair and update fields */
    while (match = search.exec(query)) {
        if (decode(match[2]) != '') {
            /* if the value is not empty
            then set the value of the input with the matching id */
            $('#' + decode(match[1])).val(decode(match[2]));
        }
    }

    /* set the value of the hidden field ckm_request_id for cake
    this takes the query parameter value of "r=" and forwards pid value. */

    updateFieldWithParameters('#ckm_request_id', ['r']);
    updateFieldWithParameters('#partner_id', ['pid', 'partnerid']);
    updateFieldWithParameters('#partnerid', ['pid', 'partnerid']);

    /* get possible keyword data from URL parameters */
    updateFieldWithParameters('#ppc_adgroup', ['s2', 'geng']);
    updateFieldWithParameters('#ppc_campaign', ['s3', 'aeng']);
    updateFieldWithParameters('#ppc_keyword', ['s4', 'keng']);
    updateFieldWithParameters('#ppc_matchtype', ['s5']);
//    var value = $('#partnerid').val();
//    var link = $('#thank_you_url').val() + '?partnerid=' + value;
//    $('#thank_you_url').val(link);
    $('#newsletter').click(function () {
        $('#optout').val($('#optout').val() == 'false' ? 'true' : 'false');
    });

});

Number.prototype.formatMoney = function(c, d, t){
var n = this,
	c = isNaN(c = Math.abs(c)) ? 0 : c,
	d = d == undefined ? "." : d,
	t = t == undefined ? "," : t,
	s = n < 0 ? "-" : "",
	i = parseInt(n = Math.abs(+n || 0).toFixed(c)) + "",
	j = (j = i.length) > 3 ? j % 3 : 0;
   return s + (j ? i.substr(0, j) + t : "") + i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + t) + (c ? d + Math.abs(n - i).toFixed(c).slice(2) : "");
};

/* used to parse URL query parameters */
function queryParameterGet(variable) {
    var query = window.location.search.substring(1);
    var vars = query.split('&');
    for (var i = 0; i < vars.length; i++) {
        var pair = vars[i].split('=');
        if (decodeURIComponent(pair[0]) == variable) {
            return decodeURIComponent(pair[1]);
        }
    }
    return '';
}

// field used to update hidden field when URL parameter can have multiple names
function updateFieldWithParameters(field, listOfParameters) {
    // loop through list of parameters to look for value
    var parameterValue = '';
    for (var i = 0; i < listOfParameters.length; i++) {
        if (queryParameterGet(listOfParameters[i]) != '') {
            parameterValue = queryParameterGet(listOfParameters[i]);
        }
    }

    // if a value is in URL update field
    if (parameterValue != '') {
        $(field).val(parameterValue);
    }
}

/********* validation initialization ************/

var validationUseToolTips = false; /* if false shows error text under fields, if true displays tool tips */
var validationFieldsJquerySelector = 'input[type="text"], input[type="radio"], select'; /* used to select the form fields on the page */

$(function () {
    /* adds validation method for checking names excluding numbers and invalid characters */
    jQuery.validator.addMethod('namecheck', function (value, element) {
        return value.match(/^[A-Za-z\s\'\.\-]+$/);
    }, 'Please enter a valid name.');

    /* adds validation method for simple 10 digit number format */
    jQuery.validator.addMethod('phonecheck', function (value, element) {
        if (value == '') {
            return true;
        }
        return value.match(/^[0-9]{10}$/);
    }, 'Please enter a valid phone number.');

    /* fill form with test data with link is pressed */
    $('#form_fill').click(function () {
        $('input[name=firstname]').val('vtest');
        $('input[name=lastname]').val('vtest');
        $('input[name=phone_home]').val('3055555555');
        $('input[name=email]').val('test@vtsqa.com');
        $('select[name=debtamount]').val('1000');
        $('select[name=paymentstatus]').val('Current');
        $('select[name=state]').val('FL');

        return false;
    });

    /* move form left and right for testing */
    $('#form_left_right').click(function () {
        $('.tooltipstered').tooltipster('hide');
        if ($('#form_left_right').html() == 'Move Form Right') {
            $('#form_div').css('float', 'right');
            $('#form_left_right').html('Move Form Left');
        } else {
            $('#form_div').css('float', 'left');
            $('#form_left_right').html('Move Form Right');
        }

        return false;
    });

    /* this should be modified if fields are added, removed or changed */

    if ($('form').length) {
        /* if a form exists and usetooltips is true show tips 
        instead of messages under fields */
        validationUseToolTips = $('form').attr('usetooltips') == 'true';
    }

    /* initialize tooltipster on form input elements */
    if (validationUseToolTips) {
        $(validationFieldsJquerySelector).tooltipster({
            trigger: 'custom',
            onlyOne: false,
            position: 'right'
        });
        $(validationFieldsJquerySelector).keyup(function () {
            $(this).tooltipster('hide');
        });
    }

    /* Invoke the plugin for the input field placeholders for IE8 and IE9 */
    $('input, textarea').placeholder();
});

function showstuff(boxid) {
    document.getElementById(boxid).style.display = 'inline';
    document.getElementById(boxid).style.visibility = 'visible';
}
function hidestuff(boxid) {
    document.getElementById(boxid).style.visibility = "hidden";
    document.getElementById(boxid).style.display = "none";
}